import { promises as fs } from "fs";

import MagicSvg from "@/components/icons/MagicSvg";
import { CardList } from "@/components/jobs/CardList";
import { Button, Input } from "@/components/ui";

import { JobProps } from "@/types/jobs";

async function getJobs(): Promise<{ data: JobProps[]; length?: number }> {
  try {
    const file = await fs.readFile(process.cwd() + "/public/data/jobs.json", "utf8");
    return { data: JSON.parse(file), length: JSON.parse(file).length };
  } catch (error) {
    console.error("Error reading users data:", error);
    return { data: [], length: 0 };
  }
}

export default async function ProfilePage() {
  const jobs = await getJobs();

  return (
    <main className="_center-page">
      <section className="section">
        <div className="container">
          <div className="relative flex flex-wrap items-center gap-4">
            <h1 className="heading-h2">UX/UI Designer</h1>
            <span className="heading-h3 inline-flex text-neutral-500">{jobs.length}</span>

            <form className="ml-auto max-w-[320px] flex-1">
              <Input
                id="searchQuery"
                name="searchQuery"
                placeholder="–ü–æ—à—É–∫ –≤–∞–∫–∞–Ω—Å—ñ–π"
                required
                iconLeft={
                  <svg className="h-5 w-5 fill-current">
                    <use href="/sprite.svg#icon-search"></use>
                  </svg>
                }
              />
            </form>
          </div>

          <div className="aside-wrapper">
            <article className="article">
              {jobs.data.length === 0 ? (
                <h1 className="heading-h2 text-primary-700 text-center">No jobs found üòî</h1>
              ) : (
                <CardList data={jobs.data} className="grid-cols-1" />
              )}
            </article>

            <aside className="aside">
              <div className="border-primary-100 hover:bg-secondary-50 flex flex-col gap-4 rounded-md border-1 p-6 transition hover:shadow-[0_0_0_2px_#E5E7EB] sm:px-6">
                <h3 className="heading-h3 text-primary-700">
                  –¢–≤—ñ–π AI-–∫–∞—Ä'—î—Ä–Ω–∏–π —Å—Ç—Ä–∞—Ç–µ–≥: –ü–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ CV —Ç–∞ –ª–∏—Å—Ç–∏ ‚Äì –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ!
                </h3>
                <p>
                  –ó–∞–±—É–¥—å –ø—Ä–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ –≤—ñ–¥–≥—É–∫–∏ —Ç–∞ –≥–æ–¥–∏–Ω–∏ —Ä—É—á–Ω–æ—ó —Ä–æ–±–æ—Ç–∏! –¢–µ–ø–µ—Ä —Ä–æ–∑—É–º–Ω–∏–π AI —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–æ –∞–¥–∞–ø—Ç—É—î –∫–ª—é—á–æ–≤—ñ
                  –∞—Å–ø–µ–∫—Ç–∏ —Ç–≤–æ–≥–æ CV —Ç–∞ –ø–∏—à–µ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π, –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤–∞–Ω–∏–π —Å—É–ø—Ä–æ–≤—ñ–¥–Ω–∏–π –ª–∏—Å—Ç –¥–ª—è –∫–æ–∂–Ω–æ—ó –≤–∞–∫–∞–Ω—Å—ñ—ó. –ú–∞–∫—Å–∏–º—ñ–∑—É–π
                  —Å–≤–æ—ó —à–∞–Ω—Å–∏ —Ç–∞ –≤—Ä–∞–∂–∞–π —Ä–µ–∫—Ä—É—Ç–µ—Ä—ñ–≤ –±–µ–∑ –∑–∞–π–≤–∏—Ö –∑—É—Å–∏–ª—å!
                </p>

                <Button className="justify-center">
                  <MagicSvg />
                  –ê–∫—Ç–∏–≤—É–≤–∞—Ç–∏
                </Button>
              </div>

              <div className="border-primary-100 hover:bg-secondary-50 flex flex-col gap-4 rounded-md border-1 p-6 transition hover:shadow-[0_0_0_2px_#E5E7EB] sm:px-6">
                <h3 className="heading-h3 text-primary-700">
                  –¢–≤—ñ–π AI-–∫–∞—Ä'—î—Ä–Ω–∏–π —Å—Ç—Ä–∞—Ç–µ–≥: –ü–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ CV —Ç–∞ –ª–∏—Å—Ç–∏ ‚Äì –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ!
                </h3>
                <p>
                  –ó–∞–±—É–¥—å –ø—Ä–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ –≤—ñ–¥–≥—É–∫–∏ —Ç–∞ –≥–æ–¥–∏–Ω–∏ —Ä—É—á–Ω–æ—ó —Ä–æ–±–æ—Ç–∏! –¢–µ–ø–µ—Ä —Ä–æ–∑—É–º–Ω–∏–π AI —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–æ –∞–¥–∞–ø—Ç—É—î –∫–ª—é—á–æ–≤—ñ
                  –∞—Å–ø–µ–∫—Ç–∏ —Ç–≤–æ–≥–æ CV —Ç–∞ –ø–∏—à–µ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π, –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤–∞–Ω–∏–π —Å—É–ø—Ä–æ–≤—ñ–¥–Ω–∏–π –ª–∏—Å—Ç –¥–ª—è –∫–æ–∂–Ω–æ—ó –≤–∞–∫–∞–Ω—Å—ñ—ó. –ú–∞–∫—Å–∏–º—ñ–∑—É–π
                  —Å–≤–æ—ó —à–∞–Ω—Å–∏ —Ç–∞ –≤—Ä–∞–∂–∞–π —Ä–µ–∫—Ä—É—Ç–µ—Ä—ñ–≤ –±–µ–∑ –∑–∞–π–≤–∏—Ö –∑—É—Å–∏–ª—å!
                </p>
              </div>
            </aside>
          </div>
        </div>
      </section>
    </main>
  );
}
